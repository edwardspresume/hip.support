---
import { changeLanguage, t } from 'i18next';
import Form from '../components/form/Form.astro';
import InputField from '../components/form/InputField.astro';
import BaseLayout, { Props as PageInfo } from '../layouts/BaseLayout.astro';

changeLanguage('en');

const pageInfo: PageInfo = {
    current_page: 'volunteer_page',
    metaTitle: 'Volunteer | HIP - HAITI IMMIGRATION PROJECT',
    metaDescription:
        'Volunteer with the haiti immigration project to help the cause',
};
---

<BaseLayout {...pageInfo}>
    <main>
        <section>
            <div class='container'>
                <h1>
                    {t('form:volunteer_heading')}
                </h1>

                <Form page={pageInfo.current_page} form_name='Volunteer'>
                    <InputField
                        name='skills'
                        type='text'
                        label={t('form:labels.skills')}
                        minlength='3'
                    />

                    <InputField
                        required
                        name='resume'
                        type='file'
                        label={t('form:labels.resume')}
                        accept='.pdf, .doc, .docx, .txt'
                    />
                </Form>
            </div>
        </section>
    </main>
</BaseLayout>

<script>
    // Event listener for form submission that checks the file size of the uploaded file.
    // If the file size is greater than 2MB, alert the user and prevent the form from submitting.

    const form = document.querySelector('form') as HTMLFormElement;
    const htmlTag = document.querySelector('html') as HTMLHtmlElement;
    const currentLanguage = htmlTag.getAttribute('lang');

    form.addEventListener('submit', (event: SubmitEvent) => {
        // prevent the form from submitting
        event.preventDefault();

        // create a FormData instance from the form
        const formData = new FormData(form);

        // get the file from the form data
        const file = formData.get('resume') as File;

        // set the maximum file size in bytes
        const MAX_SIZE = 2 * 1000 * 1000; // 2MB limit

        // get the resume input element
        const resumeInput = document.querySelector(
            'input[name="resume"]'
        ) as HTMLInputElement;

        // get the allowed file extensions from the resume input element's accept attribute
        const allowedFileExtensions = resumeInput?.getAttribute('accept');

        // get the file extension
        const fileExtension = file.name.split('.').pop() as string;

        // check if the file extension is allowed
        if (
            allowedFileExtensions &&
            !allowedFileExtensions.includes(fileExtension.toLocaleLowerCase())
        ) {
            alert(
                currentLanguage === 'en'
                    ? `Invalid file extension. Only files with the following extensions are allowed: ${allowedFileExtensions}. Please select a file with a valid extension and try again`
                    : `Ekstansyon dosye ki pa valab. Sèlman fichye ki gen ekstansyon sa yo gen dwa: ${allowedFileExtensions}. Tanpri chwazi yon fichye ki gen yon ekstansyon valab epi eseye ankò`
            );
            return;
        }

        // check if the file size is too big
        if (file.size > MAX_SIZE) {
            alert(
                currentLanguage === 'en'
                    ? 'File size is too big! It needs to be 2MB or less, try reducing the file and resubmit.'
                    : 'Gwosè dosye a twò gwo! Li bezwen 2MB oswa mwens, eseye diminye fichye a epi soumèt ankò'
            );
            return;
        }

        // check if the file is empty
        if (file.size === 0) {
            alert(
                currentLanguage === 'en'
                    ? 'File is empty. Please select a file and try again'
                    : 'Fichye a vid. Tanpri chwazi yon fichye epi eseye ankò'
            );
            return;
        }

        // if all the checks pass, submit the form
        form.submit();
    });
</script>
